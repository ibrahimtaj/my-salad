{"version":3,"sources":["Ingredients.js","Home.js","Checkout.js","App.js","serviceWorker.js","index.js"],"names":["Ingredients","props","state","names","prices","event","obj","this","setState","saladCount","className","style","color","items","map","ings","i","Checkdata","updateSalad","updatesalad","bind","margin","sel","Cnames","Nname","onClick","e","data","React","Component","CheckBox","name","price","CartIngs","Home","href","Checkout","show","oderDesc","Total","Name","Email","Notes","address","showModel","preventDefault","HideModel","target","value","newArray","checkpass","cartedVal","cv","cartContent","cp","push","Nprice","Prices","handleClose","OD","Address","tot","onSubmit","type","onChange","handleChange1","required","handleChange2","handleChange3","fontWeight","Desc","reduce","prev","cur","Modal","showHideClassName","App","id","Header","Content","Cvalue","CheckOut","console","log","to","exact","path","render","updateCheck","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f5a6f2ee.chunk.js","sourcesContent":["import React from 'react';\r\nclass Ingredients extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            \"items\": [\r\n                {\r\n                    \"name\": \"cucumber\",\r\n                    \"price\": 0.5\r\n                },\r\n                {\r\n                    \"name\": \"tomato\",\r\n                    \"price\": 0.6\r\n                },\r\n                {\r\n                    \"name\": \"egg\",\r\n                    \"price\": 3\r\n                },\r\n                {\r\n                    \"name\": \"tuna\",\r\n                    \"price\": 2\r\n                },\r\n                {\r\n                    \"name\": \"potato\",\r\n                    \"price\": 1.2\r\n                },\r\n                {\r\n                    \"name\": \"lettuce\",\r\n                    \"price\": 0.2\r\n                },\r\n                {\r\n                    \"name\": \"corn\",\r\n                    \"price\": 2\r\n                },\r\n                {\r\n                    \"name\": \"onion\",\r\n                    \"price\": 0.3\r\n                },\r\n                {\r\n                    \"name\": \"mashroom\",\r\n                    \"price\": 2.5\r\n                },\r\n                {\r\n                    \"name\": \"pasta\",\r\n                    \"price\": 4\r\n                },\r\n                {\r\n                    \"name\": \"pickles\",\r\n                    \"price\": 3.3\r\n                }\r\n            ],\r\n            \"saladIn\":\"\",\r\n            \"saladCount\":[]\r\n        }\r\n    }\r\n    updatesalad(names, prices, event){\r\n        const obj = {'Nname':names, 'Nprice':prices};\r\n        this.setState({\r\n            saladCount:[...this.state.saladCount, obj]\r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Ingredients\">\r\n            <p style={{color:\"#000000\"}}>Select Ingredients for your Salad</p>\r\n            {this.state.items.map((ings, i)=><CheckBox Checkdata={ings} updateSalad = {this.updatesalad.bind(this)}/>)}\r\n            <div className=\"CartBox\">\r\n                <p style={{color:\"#CCCCCC\",margin:0}}>Selected Ingredients for your Salad</p>\r\n                {this.state.saladCount.map((sel, i)=><CartIngs Cnames={sel.Nname} />)}\r\n            </div>\r\n            <button\r\n            onClick={(e)=>this.props.data(this.state.saladCount, e)}\r\n            className=\"CheckBtn\">ADD</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass CheckBox extends React.Component{\r\n    render(){\r\n        return(\r\n            <button onClick={(e)=>this.props.updateSalad(this.props.Checkdata.name, this.props.Checkdata.price, e)}>\r\n                {this.props.Checkdata.name} - &#8377;{this.props.Checkdata.price} +\r\n            </button>    \r\n        )\r\n    }\r\n}\r\n\r\nclass CartIngs extends React.Component{\r\n    render()\r\n    {\r\n        return(\r\n            <button className=\"cBtn\">{this.props.Cnames}</button>\r\n        )\r\n    }\r\n}\r\n   \r\n\r\n\r\nexport default Ingredients;","import React from 'react';\r\nclass Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2>Welcome to My Salad!!!!</h2>\r\n                <a href=\"/Ingredients\"><button>Order</button></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\n\r\nexport default class Checkout extends React.Component\r\n{\r\n    state={\r\n        show: false,\r\n        oderDesc:\"selexted Ings\",\r\n        Total: \"total\",\r\n        Name:\"\",\r\n        Email:\"\",\r\n        Notes:\"\",\r\n        address:\"address\"\r\n    };\r\n\r\n    showModel=(e)=>{\r\n        e.preventDefault();\r\n        this.setState({show: true});\r\n    }\r\n\r\n    HideModel=()=>{\r\n        this.setState({show: false});\r\n    }\r\n\r\n    handleChange1(event){\r\n        this.setState({ Name: event.target.value });\r\n        this.setState({\r\n            address: this.state.Name+', '+this.state.Email+', '+this.state.Notes\r\n        });\r\n    }\r\n    handleChange2(event){\r\n        this.setState({ Email: event.target.value });\r\n        this.setState({\r\n            address: this.state.Name+', '+this.state.Email+', '+this.state.Notes\r\n        });\r\n    }\r\n    handleChange3(event){\r\n        this.setState({ Notes: event.target.value });\r\n        this.setState({\r\n            address: this.state.Name+', '+this.state.Email+', '+this.state.Notes\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let newArray = [];\r\n        if(this.props.checkpass == 1){\r\n            return(\r\n                <div>\r\n                    <h2>Checkout</h2>\r\n                    <div className=\"orderDesc\">\r\n                        <h4>Order Description</h4>\r\n                        <ul className=\"order\">\r\n                        {this.props.cartedVal.map((cv, i)=><Desc cartContent={cv} />)}\r\n                        \r\n                        \r\n                        {this.props.cartedVal.map((cp, i)=>{\r\n                            newArray.push(cp.Nprice);\r\n                            //console.log(newArray)\r\n                        })}\r\n                        <li>\r\n                        <hr />\r\n                        Total Amount: &#8377;<b><Total Prices={newArray} /></b>\r\n                        </li>\r\n                        </ul>\r\n    \r\n    \r\n                    </div>\r\n                    <div className=\"orderDesc\">\r\n                        <h4>Order Details Form</h4>\r\n                        <Modal show={this.state.show} \r\n                                handleClose={this.HideModel} \r\n                                OD={this.props.cartedVal}\r\n                                Address={this.state.address}\r\n                                tot={newArray}\r\n                        >\r\n                        </Modal> \r\n\r\n                        <form name=\"orderForm\" className=\"orderForm\" onSubmit={this.showModel}>\r\n                            <label>Name*</label>\r\n                            <input type=\"text\" name=\"name\" className=\"Name\" value={this.state.Name} onChange={this.handleChange1.bind(this)} required/>\r\n                            <label>Email*</label>\r\n                            <input type=\"email\" name=\"email\" className=\"Email\" value={this.state.Email} onChange={this.handleChange2.bind(this)} required/>\r\n                            <label>Notes</label>\r\n                            <textarea name=\"notes\" className=\"Notes\" value={this.state.Notes} onChange={this.handleChange3.bind(this)} />\r\n                            <input type=\"submit\" value=\"Order\"/>\r\n                        </form>\r\n                    </div>  \r\n                                 \r\n                </div>\r\n            );\r\n        } else {\r\n            return(<p style={{color:\"black\",fontWeight:\"bold\"}}>No Items selected. Select your Ingredients to make Order</p>);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nclass Desc extends React.Component{\r\n    render(){\r\n        return(\r\n        <li>{this.props.cartContent.Nname} - &#8377;{this.props.cartContent.Nprice}</li>\r\n        )\r\n    }\r\n}\r\n\r\nconst Total = props =>{\r\n    const total = props.Prices.reduce(\r\n        (prev, cur) => prev+cur\r\n    );\r\n    return total;\r\n}\r\n\r\nconst Modal = props =>{\r\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\r\n    return(\r\n        <div className={showHideClassName}>\r\n            <section className=\"modal-main\">\r\n                <div>\r\n                    <h3 style={{color:\"green\"}}>Thank you for your Order. Your order will reach you soon....</h3>\r\n                    <h4>Order Summary</h4>\r\n                    <ul>\r\n                        {props.OD.map((cv, i)=><Desc cartContent={cv} />)}\r\n                    \r\n                    <li>Total: &#8377;<b><Total Prices={props.tot} /></b></li>\r\n                    </ul>\r\n                    <hr />\r\n                    <h4>Customer Details</h4>\r\n                    {props.Address}\r\n                    <hr />\r\n                </div>\r\n                <a href=\"/\"><button onClick={props.handleClose}>close</button></a>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { \n  BrowserRouter as Router, \n  Route, \n  Link, \n  Switch \n} from 'react-router-dom'; \nimport './App.css';\nimport Ingredients from './Ingredients.js';\nimport Home from './Home.js';\nimport Checkout from './Checkout.js';\n\nclass App extends React.Component\n{\n  render(){\n    return(\n      <div id=\"Wrapper\">\n        <Header />\n        <Content />\n      </div>\n    )\n  }\n}\n\n\nclass Header extends React.Component{\n  render(){\n    return(\n      <div className=\"header\">\n        <h3>My Salad Store</h3>\n      </div>\n    );\n  }\n}\n\nclass Content extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      Cvalue : [],\n      CheckOut:0\n    }\n  }\n\n  updateCheck(value, e){\n    if(e.target.className == \"CheckBtn\"){\n      this.setState({\n        Cvalue:[...value]\n      });\n      this.setState({\n        CheckOut:1\n      });\n    }\n    \n    console.log(this.state.Cvalue);\n  }\n  render(){\n    return(\n      <div className=\"content\">\n        \n        <Router>\n            <ul className=\"Tmenu1\">\n                <li> \n                  <Link to=\"/Home\">\n                  <span>Home</span>  \n                  </Link> \n                </li> \n                <li> \n                  <Link to=\"/Ingredients\">\n                  <span>Ingredients</span>  \n                  </Link> \n                </li> \n                <li> \n                  <Link to=\"/Checkout\">\n                    <span>Checkout</span>  \n                    <span className=\"Cindicator\">{this.state.CheckOut}</span>\n                  </Link> \n                </li> \n            </ul>\n            \n      \n            <Switch> \n              <Route exact path='/' render={()=>(<Home />)} />\n              <Route exact path='/Ingredients' render={()=>(<Ingredients data={this.updateCheck.bind(this)}/>)} />\n              <Route exact path='/Checkout' render={()=>(<Checkout cartedVal = {this.state.Cvalue} checkpass={this.state.CheckOut}/>)} />\n            </Switch> \n            </Router>\n\n{/*this.state.Cvalue.map((cv, i)=>cv.Nname)*/}\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}